const io = import "std.io"

** rules
** argument is constant by default for less errors
** syntax like ruby with end keyword

** functions
add :: i32 -> i32 -> i32
fun add x y = x+y end

div :: i32 -> i32 -> i32
fun div x y = x/y end

** anonymous functions
const add_lamb = lambda x y -> x+y end 3 2
const div_lamb = lambda x y -> x/y end 3 2

** define types in function
start_loop :: i32 -> unit
fun start_loop max =
	var min = 0
    while min < max
        io.print(min)
        min+=1
	end
end


** array = []
merge_array :: [i32] -> [i32] -> [i32]
fun merge_array a b =
	a ++ b
end

pow :: i32 -> i32
fun pow x = x*x end

fun main = 
	io.println("add: {}", add(2,3))
	io.println("div: {}", div(2,3))
	io.println("add lambda: {}", add_lamb)
	io.println("div lambda: {}", div_lamb)
	io.println("merge array: {}", merge_array([2,2,2], [2,3,4]))
	io.println("pow: {}", pow(2))
end
